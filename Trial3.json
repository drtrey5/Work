{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  },
  "orig_nbformat": 4,
  "kernelspec": {
   "name": "python3",
   "display_name": "Python 3.9.5 64-bit ('workenv': conda)"
  },
  "interpreter": {
   "hash": "af7ae893aa45179dd6f8560b4aa2c71897b298e34ec3ce90d2696f8c664b9ca9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#imports for the application\n",
    "\n",
    "import pandas as pd\n",
    "import tkinter as tk\n",
    "import tkcalendar as cal\n",
    "import pandastable as ps\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import datetime as dt\n",
    "import statsmodels as sm\n",
    "\n",
    "from matplotlib.backends.backend_pdf import PdfPages\n",
    "from matplotlib.backends.backend_tkagg import (FigureCanvasTkAgg, NavigationToolbar2Tk)\n",
    "\n",
    "xlsx = pd.ExcelFile(\"Data5_23_Correct.xlsx\", engine = \"openpyxl\")\n",
    "dataOEE_Page = pd.read_excel(xlsx,'Twin Screw OEE')\n",
    "dataTS_Page = pd.read_excel(xlsx, \"Twin Screw \")\n",
    "pairedDate = pd.DataFrame()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def startUp():\n",
    "    #This section of code takes filler sections of the excel spreadsheet from both tabs and removes them\n",
    "\n",
    "    global dataOEE_Page\n",
    "    global dataTS_Page\n",
    "\n",
    "    dataOEE_Page.replace('x', np.nan, inplace= True)\n",
    "    dataTS_Page.replace('x', np.nan, inplace = True)\n",
    "\n",
    "    dataOEE_Page.drop(labels = 0, axis = 0, inplace = True)\n",
    "    dataTS_Page.drop(labels = 0, axis = 0, inplace = True)\n",
    "\n",
    "    #print(dataOEE_Page)\n",
    "\n",
    "    #Names the indexes for the columns of the dataframes\n",
    "\n",
    "    dataOEE_Page.columns = ['Date', 'Lbs Produced', '%OEE', 'Labor Hours', 'Lb/Man Hour', 'Pails Filled', 'Pails/Man Hour', 'Removal', 'Week of', 'Weekly %OEE']\n",
    "    dataTS_Page.columns = ['Date', 'Num of Ops', 'Total Minutes', 'Maintenance', 'Making Powder', 'Making Prepolymer', 'Startup', 'Breaks', 'LBS Produced', 'Pails Filled', 'Minutes Worked', 'Efficiency', 'Unnamed', 'Unnamed', 'Unnamed']\n",
    "\n",
    "    #dataOEE_Page\n",
    "\n",
    "    #This section trims the fat off the data set and removes entries that are effectively empty from both the OEE and Efficiency\n",
    "    #tab. \n",
    "\n",
    "    dataTS_Page = dataTS_Page.dropna(how = 'all', axis = 1)\n",
    "    dataTS_Page = dataTS_Page.dropna(subset=['Num of Ops'])\n",
    "    dataTS_Page = dataTS_Page.drop(labels='Pails Filled', axis = 1)\n",
    "\n",
    "    dataOEE_Page = dataOEE_Page.dropna(subset=['Labor Hours'])\n",
    "    dataOEE_Page = dataOEE_Page.dropna(how = 'all', axis = 1)\n",
    "    dataOEE_Page = dataOEE_Page.drop(labels='Weekly %OEE', axis = 1)\n",
    "    dataOEE_Page = dataOEE_Page.drop(labels='Week of', axis = 1)\n",
    "\n",
    "    #Assigns type data to the values in the columns, certain columns are uninterpretable due to the extra data within them \n",
    "\n",
    "    dataOEE_Page = dataOEE_Page.astype({\"Lbs Produced\": np.float64, \"%OEE\": np.float64, \"Labor Hours\": np.float64, \"Lb/Man Hour\": np.float64, \"Pails Filled\": np.float64, \"Pails/Man Hour\": np.float64})\n",
    "    dataTS_Page = dataTS_Page.astype({'Num of Ops': np.float64, 'Total Minutes': np.float64, 'Maintenance': np.float64, 'Efficiency': np.float64})\n",
    "\n",
    "    #This section will identify the percent values that are based as a decimal in the updated dataframes\n",
    "    #From here the new data is passed down onto future methods for stronger correlations\n",
    "\n",
    "    dataOEE_Page.loc[dataOEE_Page['%OEE'] < 1, '%OEE'] = round(dataOEE_Page['%OEE']*100, 0)\n",
    "    dataTS_Page.loc[dataTS_Page['Efficiency'] < 1, 'Efficiency'] = round(dataTS_Page['Efficiency']*100, 0)\n",
    "\n",
    "    #dataOEE_Page.loc[str(dataOEE_Page['Pails Filled']).find('(') > -1, 'Pails Filled'] \n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pairDateData(OEEdata, TSdata):\n",
    "    #This section of code takes the first 13 entries of the Twin Screw OEE tab of the excel sheet and removes them from the data pool\n",
    "    #This effectively removes the logic error that occurred due to the lack of the # of operators on the - tab, and realigns the dates\n",
    "    #Following this section, data that doesn't have a matching pair datewise will be removed from each respective dataframe\n",
    "\n",
    "    global pairedDate\n",
    "\n",
    "    OEEdata.drop(dataOEE_Page.index[range(0,13)], axis = 0, inplace =True)\n",
    "\n",
    "    OEEdata = OEEdata.reset_index(drop = True)\n",
    "    TSdata = TSdata.reset_index(drop = True)\n",
    "\n",
    "    #Using the dates from the trimmed lists, then comparing them to make a condensed list of data points\n",
    "    #This resultant list should contain all eligible data points\n",
    "    #From this comparison dataframe we should be able to pull data that correlates directly\n",
    "    #Should only be done in order to compare data cross sheet due to lack of variables\n",
    "\n",
    "    dateCheck = [OEEdata['Date'], TSdata['Date']] #Makes a list of the columns from either dataFrame\n",
    "    dateCheck = pd.concat(dateCheck, axis=1, ignore_index=False, verify_integrity=False) #Combines the dataCheck list into a dataFrame\n",
    "    dateCheck['Removal_OEE'] = np.nan #Adds columns of nan values\n",
    "    dateCheck['Removal_TS'] = np.nan \n",
    "    dateCheck.columns = ['OEE_Date', 'TS_Date','Removal_OEE','Removal_TS'] #Renames the columns of the dataframe\n",
    "\n",
    "    #Checks whether or not the dates correspond to each other throughout either column, result is recorded in respective removal          #column\n",
    "    #Recorded as True if there is matching pair, False if there isn't\n",
    "    dateCheck['Removal_OEE'] = (dateCheck['OEE_Date'].isin(dateCheck['TS_Date']))\n",
    "    dateCheck['Removal_TS'] = (dateCheck['TS_Date'].isin(dateCheck['OEE_Date']))\n",
    "\n",
    "    OEEindex = dateCheck[dateCheck['Removal_OEE'] == False].index #Identifies the exact index of the date cell needing removed\n",
    "    TSindex = dateCheck[dateCheck['Removal_TS'] == False].index\n",
    "\n",
    "    #print(OEEindex)\n",
    "    #print(TSindex)\n",
    "\n",
    "    #Drops erroneous cells from both data sets\n",
    "    TSdata = TSdata.drop(labels = ['Date'], axis = 1)\n",
    "    OEEdata = OEEdata.drop(OEEindex, inplace=False)\n",
    "    TSdata = TSdata.drop(TSindex,inplace=False)\n",
    "\n",
    "    OEEdata = OEEdata.reset_index(drop = True)\n",
    "    TSdata = TSdata.reset_index(drop = True)\n",
    "    \n",
    "\n",
    "    pairedDate = pd.concat([OEEdata, TSdata], axis = 1, ignore_index = False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def narrowDates(date, userInput):\n",
    "\n",
    "    #Will act as test parameters to prepare method for true use\n",
    "    global pairedDate\n",
    "    global tableData\n",
    "    global beginningOfInterval\n",
    "\n",
    "    df = pairedDate.copy(deep = True)\n",
    "    #testDay = True #Will be the program default\n",
    "    #testWeek = False\n",
    "    #testMonth = False\n",
    "    testDate = pd.Timestamp(date + \" 00:00:00\")\n",
    "    daysInMonth = testDate.daysinmonth\n",
    "    beginningOfInterval = pd.Timestamp(2020)\n",
    "    #print(daysInMonth)\n",
    "    #userInput = 'Tier 3'\n",
    "\n",
    "    \n",
    "    df['Date'] = pd.to_datetime(df['Date'])\n",
    "\n",
    "    #Basically decides how far back the date retrieval will go.\n",
    "\n",
    "    if (userInput == \"Tier 2\"):\n",
    "        #dateInterval = 0\n",
    "        beginningOfInterval = testDate\n",
    "    elif (userInput == 'Tier 3'):\n",
    "        #dateInterval = 7\n",
    "        beginningOfInterval = testDate - pd.Timedelta('7 day')\n",
    "    elif (userInput == 'Tier 5'): #If not month's end it will retrieve all prior data up to that point\n",
    "        beginningOfInterval = testDate.replace(day=1)\n",
    "        print (beginningOfInterval)\n",
    "    else:\n",
    "        print('System Error: Invalid selection')\n",
    "\n",
    "    #if (testDate in df['Date'].values):\n",
    "     #   print (\"It's here\")\n",
    "    #else:\n",
    "     #   print('Not in dataset')\n",
    "\n",
    "\n",
    "    #Will set index of the dataframe to that of the dates to be easily moved through and sorted by\n",
    "    df.set_index('Date', inplace=True)\n",
    "    tableData = df.loc[beginningOfInterval:testDate]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Strips down the tableData dataframe to the selected variables\n",
    "def cleanseData(userX, userY, userY2):\n",
    "\n",
    "    global tableData #used to change the tableData dataframe w/o a return\n",
    "\n",
    "    #Doesn't allow interaction with an empty dataframe\n",
    "    if tableData.empty:\n",
    "        print('Action not executable with selected dataset')\n",
    "    \n",
    "    #Doesn't try to take the date indexes as a positional argument preventing an error\n",
    "    elif userX == 'Date':\n",
    "        if (userY == \"\"):\n",
    "            tableData  = tableData[[userY2]]\n",
    "        elif (userY2 == ''):\n",
    "            tableData = tableData[[userY]]\n",
    "        else:\n",
    "            tableData = tableData[[userY, userY2]]\n",
    "    #Avoids the date positional argument usage through no use of Date\n",
    "    else:\n",
    "        if (userY == \"\"):\n",
    "            tableData  = tableData[[userX, userY2]]\n",
    "        elif (userY2 == ''):\n",
    "            tableData = tableData[[userX, userY]]\n",
    "        else:\n",
    "            tableData = tableData[[userX, userY, userY2]]\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def applyFunction(date, userX, userY, userY2, tier, corrVal):\n",
    "    \n",
    "    global tableData\n",
    "    global table\n",
    "    global ax1\n",
    "    global canvas\n",
    "    global lastX\n",
    "    global beginningOfInterval\n",
    "\n",
    "    \n",
    "    #for widget in gFrame.winfo_children():\n",
    "        #widget.destroy()\n",
    "    ax1.clear()\n",
    "\n",
    "    if userX == '' or (userY == '' and userY2 == '')  or (userY == 'Date' or userY2 == 'Date'):\n",
    "        print('Invalid Input, please select both an X and Y variable')\n",
    "    else:\n",
    "        narrowDates(date, tier)\n",
    "        cleanseData(userX, userY, userY2)\n",
    "        lastX = userX\n",
    "\n",
    "        if(corrVal):\n",
    "            tableData.sort_values(userX, axis = 0, ascending = True, inplace = True, na_position ='last')\n",
    "\n",
    "        \n",
    "\n",
    "        if (userX == 'Date'):\n",
    "            if (userY == ''):\n",
    "                ax1.scatter(tableData.index, tableData[userY2], label = userY2)\n",
    "            elif (userY2 == ''):\n",
    "                ax1.scatter(tableData.index, tableData[userY], label = userY)\n",
    "            else:\n",
    "                ax1.scatter(tableData.index, tableData[userY], color = 'red', label = userY)\n",
    "                ax1.scatter(tableData.index, tableData[userY2], color = 'blue', label = userY2)\n",
    "\n",
    "        else:\n",
    "            if (userY == ''):\n",
    "                ax1.scatter(tableData[userX], tableData[userY2], label = userY2)\n",
    "            elif (userY2 == ''):\n",
    "                ax1.scatter(tableData[userX], tableData[userY], label = userY)\n",
    "            else:\n",
    "                ax1.scatter(tableData[userX], tableData[userY], color = 'red', label = userY)\n",
    "                ax1.scatter(tableData[userX], tableData[userY2], color = 'blue', label = userY2)\n",
    "\n",
    "        #beginningDate = tableData.iloc[[0]].index.strftime(\"%Y-%m-%d\").values\n",
    "\n",
    "        \n",
    "\n",
    "        ax1.set_title(beginningOfInterval.strftime(\"%Y-%m-%d\") + \" to \" + date)   \n",
    "        ax1.set_xlabel(userX)\n",
    "        plt.setp(ax1.get_xticklabels(), rotation=45)\n",
    "        ax1.legend()\n",
    "        \n",
    "        #fig.draw()\n",
    "\n",
    "        #canvas = FigureCanvasTkAgg(fig, master=gFrame)  # A tk.DrawingArea.\n",
    "        canvas.draw()\n",
    "        #canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand=1)\n",
    "\n",
    "        #toolbar = NavigationToolbar2Tk(canvas, graphFrame)\n",
    "        #toolbar.update()\n",
    "        #canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand=1)\n",
    "\n",
    "        \n",
    "\n",
    "        table.model.df = tableData\n",
    "        table.redraw()\n",
    "\n",
    "    #print(userX)\n",
    "    #print(userY)\n",
    "    #print(userY2)\n",
    "    #print(tier)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Doesn't function as intended... this is due to the list not retrieving the chart as a datatype\n",
    "def exportReady():\n",
    "\n",
    "    global tableData\n",
    "    global exportList\n",
    "    global fig\n",
    "\n",
    "    \n",
    "    #valList = tableData.columns.values.tolist()\n",
    "    #chart = plt.figure(figsize = (8,5))\n",
    "    #data = chart.add_subplot(111)\n",
    "    \n",
    "    #if(len(valList) == 1):\n",
    "    #    data.scatter(tableData.index, tableData[valList[0]], label = valList[0])\n",
    "    #elif(lastX == 'Date' and len(valList) == 2):\n",
    "    #    data.scatter(tableData.index, tableDate[valList[0]], label = valList[0])\n",
    "    #    data.scatter(tableData.index, tableDate[valList[1]], label = valList[1])\n",
    "    #elif(len(valList) == 3):\n",
    "    #    data.scatter(tableData[valList[0]], tableData[valList[1]], label = valList[1])\n",
    "    #    data.scatter(tableData[valList[0]], tableData[valList[2]], label = valList[2])\n",
    "    #else:\n",
    "    #    data.scatter(tableData[valList[0]], tableData[valList[1]], label = valList[1])\n",
    "\n",
    "    #data.legend()\n",
    "    #data.set_xlabel(lastX)\n",
    "\n",
    "    exportList.append(chartCopy)\n",
    "\n",
    "\n"
   ]
  },
  {
   "source": [
    "def exportReady2():\n",
    "    global tableData\n",
    "    global exportList\n",
    "    global lastX\n",
    "\n",
    "    valList = tableData.columns.values.tolist()\n",
    "    \n",
    "    #if(len(valList) == 1):\n",
    "        \n",
    "    #elif(lastX == 'Date' and len(valList) == 2):\n",
    "        \n",
    "    #elif(len(valList) == 3):\n",
    "        \n",
    "    #else:\n",
    "        \n",
    "\n"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "def saveCharts():\n",
    "\n",
    "    global exportList\n",
    "\n",
    "    \n",
    "    with PdfPages('multipage_pdf.pdf') as pdf:\n",
    "\n",
    "        for chart in exportList:\n",
    "            pdf.savefig(chart)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "output_type": "stream",
     "name": "stderr",
     "text": [
      "Exception in Tkinter callback\nTraceback (most recent call last):\n  File \"C:\\Users\\KaminsTr\\Anaconda3\\envs\\workenv\\lib\\tkinter\\__init__.py\", line 1892, in __call__\n    return self.func(*args)\n  File \"<ipython-input-16-2718f4eed183>\", line 8, in exportReady\n    chartCopy = fig.copy(deep=True)\nAttributeError: 'Figure' object has no attribute 'copy'\n"
     ]
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<Figure size 576x360 with 1 Axes>",
      "image/svg+xml": "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\r\n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n<!-- Created with matplotlib (https://matplotlib.org/) -->\r\n<svg height=\"369.93367pt\" version=\"1.1\" viewBox=\"0 0 484.202801 369.93367\" width=\"484.202801pt\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n <metadata>\r\n  <rdf:RDF xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\r\n   <cc:Work>\r\n    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\r\n    <dc:date>2021-06-25T14:39:58.072814</dc:date>\r\n    <dc:format>image/svg+xml</dc:format>\r\n    <dc:creator>\r\n     <cc:Agent>\r\n      <dc:title>Matplotlib v3.3.4, https://matplotlib.org/</dc:title>\r\n     </cc:Agent>\r\n    </dc:creator>\r\n   </cc:Work>\r\n  </rdf:RDF>\r\n </metadata>\r\n <defs>\r\n  <style type=\"text/css\">*{stroke-linecap:butt;stroke-linejoin:round;}</style>\r\n </defs>\r\n <g id=\"figure_1\">\r\n  <g id=\"patch_1\">\r\n   <path d=\"M 0 369.93367 \r\nL 484.202801 369.93367 \r\nL 484.202801 0 \r\nL 0 0 \r\nz\r\n\" style=\"fill:none;\"/>\r\n  </g>\r\n  <g id=\"axes_1\">\r\n   <g id=\"patch_2\">\r\n    <path d=\"M 26.925 294.118125 \r\nL 473.325 294.118125 \r\nL 473.325 22.318125 \r\nL 26.925 22.318125 \r\nz\r\n\" style=\"fill:#ffffff;\"/>\r\n   </g>\r\n   <g id=\"PathCollection_1\">\r\n    <defs>\r\n     <path d=\"M 0 3 \r\nC 0.795609 3 1.55874 2.683901 2.12132 2.12132 \r\nC 2.683901 1.55874 3 0.795609 3 0 \r\nC 3 -0.795609 2.683901 -1.55874 2.12132 -2.12132 \r\nC 1.55874 -2.683901 0.795609 -3 0 -3 \r\nC -0.795609 -3 -1.55874 -2.683901 -2.12132 -2.12132 \r\nC -2.683901 -1.55874 -3 -0.795609 -3 0 \r\nC -3 0.795609 -2.683901 1.55874 -2.12132 2.12132 \r\nC -1.55874 2.683901 -0.795609 3 0 3 \r\nz\r\n\" id=\"mce51d0b1a8\" style=\"stroke:#1f77b4;\"/>\r\n    </defs>\r\n    <g clip-path=\"url(#p94d9edf2e4)\">\r\n     <use style=\"fill:#1f77b4;stroke:#1f77b4;\" x=\"47.215909\" xlink:href=\"#mce51d0b1a8\" y=\"132.782296\"/>\r\n     <use style=\"fill:#1f77b4;stroke:#1f77b4;\" x=\"105.189935\" xlink:href=\"#mce51d0b1a8\" y=\"41.94005\"/>\r\n     <use style=\"fill:#1f77b4;stroke:#1f77b4;\" x=\"163.163961\" xlink:href=\"#mce51d0b1a8\" y=\"89.178018\"/>\r\n     <use style=\"fill:#1f77b4;stroke:#1f77b4;\" x=\"221.137987\" xlink:href=\"#mce51d0b1a8\" y=\"34.67267\"/>\r\n     <use style=\"fill:#1f77b4;stroke:#1f77b4;\" x=\"279.112013\" xlink:href=\"#mce51d0b1a8\" y=\"103.712777\"/>\r\n     <use style=\"fill:#1f77b4;stroke:#1f77b4;\" x=\"453.034091\" xlink:href=\"#mce51d0b1a8\" y=\"281.76358\"/>\r\n    </g>\r\n   </g>\r\n   <g id=\"matplotlib.axis_1\">\r\n    <g id=\"xtick_1\">\r\n     <g id=\"line2d_1\">\r\n      <defs>\r\n       <path d=\"M 0 0 \r\nL 0 3.5 \r\n\" id=\"m13f1fe4dff\" style=\"stroke:#000000;stroke-width:0.8;\"/>\r\n      </defs>\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"47.215909\" xlink:href=\"#m13f1fe4dff\" y=\"294.118125\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_1\">\r\n      <!-- 2021-05-10 -->\r\n      <g transform=\"translate(28.620106 347.584984)rotate(-45)scale(0.1 -0.1)\">\r\n       <defs>\r\n        <path d=\"M 19.1875 8.296875 \r\nL 53.609375 8.296875 \r\nL 53.609375 0 \r\nL 7.328125 0 \r\nL 7.328125 8.296875 \r\nQ 12.9375 14.109375 22.625 23.890625 \r\nQ 32.328125 33.6875 34.8125 36.53125 \r\nQ 39.546875 41.84375 41.421875 45.53125 \r\nQ 43.3125 49.21875 43.3125 52.78125 \r\nQ 43.3125 58.59375 39.234375 62.25 \r\nQ 35.15625 65.921875 28.609375 65.921875 \r\nQ 23.96875 65.921875 18.8125 64.3125 \r\nQ 13.671875 62.703125 7.8125 59.421875 \r\nL 7.8125 69.390625 \r\nQ 13.765625 71.78125 18.9375 73 \r\nQ 24.125 74.21875 28.421875 74.21875 \r\nQ 39.75 74.21875 46.484375 68.546875 \r\nQ 53.21875 62.890625 53.21875 53.421875 \r\nQ 53.21875 48.921875 51.53125 44.890625 \r\nQ 49.859375 40.875 45.40625 35.40625 \r\nQ 44.1875 33.984375 37.640625 27.21875 \r\nQ 31.109375 20.453125 19.1875 8.296875 \r\nz\r\n\" id=\"DejaVuSans-50\"/>\r\n        <path d=\"M 31.78125 66.40625 \r\nQ 24.171875 66.40625 20.328125 58.90625 \r\nQ 16.5 51.421875 16.5 36.375 \r\nQ 16.5 21.390625 20.328125 13.890625 \r\nQ 24.171875 6.390625 31.78125 6.390625 \r\nQ 39.453125 6.390625 43.28125 13.890625 \r\nQ 47.125 21.390625 47.125 36.375 \r\nQ 47.125 51.421875 43.28125 58.90625 \r\nQ 39.453125 66.40625 31.78125 66.40625 \r\nz\r\nM 31.78125 74.21875 \r\nQ 44.046875 74.21875 50.515625 64.515625 \r\nQ 56.984375 54.828125 56.984375 36.375 \r\nQ 56.984375 17.96875 50.515625 8.265625 \r\nQ 44.046875 -1.421875 31.78125 -1.421875 \r\nQ 19.53125 -1.421875 13.0625 8.265625 \r\nQ 6.59375 17.96875 6.59375 36.375 \r\nQ 6.59375 54.828125 13.0625 64.515625 \r\nQ 19.53125 74.21875 31.78125 74.21875 \r\nz\r\n\" id=\"DejaVuSans-48\"/>\r\n        <path d=\"M 12.40625 8.296875 \r\nL 28.515625 8.296875 \r\nL 28.515625 63.921875 \r\nL 10.984375 60.40625 \r\nL 10.984375 69.390625 \r\nL 28.421875 72.90625 \r\nL 38.28125 72.90625 \r\nL 38.28125 8.296875 \r\nL 54.390625 8.296875 \r\nL 54.390625 0 \r\nL 12.40625 0 \r\nz\r\n\" id=\"DejaVuSans-49\"/>\r\n        <path d=\"M 4.890625 31.390625 \r\nL 31.203125 31.390625 \r\nL 31.203125 23.390625 \r\nL 4.890625 23.390625 \r\nz\r\n\" id=\"DejaVuSans-45\"/>\r\n        <path d=\"M 10.796875 72.90625 \r\nL 49.515625 72.90625 \r\nL 49.515625 64.59375 \r\nL 19.828125 64.59375 \r\nL 19.828125 46.734375 \r\nQ 21.96875 47.46875 24.109375 47.828125 \r\nQ 26.265625 48.1875 28.421875 48.1875 \r\nQ 40.625 48.1875 47.75 41.5 \r\nQ 54.890625 34.8125 54.890625 23.390625 \r\nQ 54.890625 11.625 47.5625 5.09375 \r\nQ 40.234375 -1.421875 26.90625 -1.421875 \r\nQ 22.3125 -1.421875 17.546875 -0.640625 \r\nQ 12.796875 0.140625 7.71875 1.703125 \r\nL 7.71875 11.625 \r\nQ 12.109375 9.234375 16.796875 8.0625 \r\nQ 21.484375 6.890625 26.703125 6.890625 \r\nQ 35.15625 6.890625 40.078125 11.328125 \r\nQ 45.015625 15.765625 45.015625 23.390625 \r\nQ 45.015625 31 40.078125 35.4375 \r\nQ 35.15625 39.890625 26.703125 39.890625 \r\nQ 22.75 39.890625 18.8125 39.015625 \r\nQ 14.890625 38.140625 10.796875 36.28125 \r\nz\r\n\" id=\"DejaVuSans-53\"/>\r\n       </defs>\r\n       <use xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n       <use x=\"417.822266\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"453.90625\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"517.529297\" xlink:href=\"#DejaVuSans-48\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"xtick_2\">\r\n     <g id=\"line2d_2\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"105.189935\" xlink:href=\"#m13f1fe4dff\" y=\"294.118125\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_2\">\r\n      <!-- 2021-05-11 -->\r\n      <g transform=\"translate(86.594132 347.584984)rotate(-45)scale(0.1 -0.1)\">\r\n       <use xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n       <use x=\"417.822266\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"453.90625\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"517.529297\" xlink:href=\"#DejaVuSans-49\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"xtick_3\">\r\n     <g id=\"line2d_3\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"163.163961\" xlink:href=\"#m13f1fe4dff\" y=\"294.118125\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_3\">\r\n      <!-- 2021-05-12 -->\r\n      <g transform=\"translate(144.568158 347.584984)rotate(-45)scale(0.1 -0.1)\">\r\n       <use xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n       <use x=\"417.822266\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"453.90625\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"517.529297\" xlink:href=\"#DejaVuSans-50\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"xtick_4\">\r\n     <g id=\"line2d_4\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"221.137987\" xlink:href=\"#m13f1fe4dff\" y=\"294.118125\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_4\">\r\n      <!-- 2021-05-13 -->\r\n      <g transform=\"translate(202.542184 347.584984)rotate(-45)scale(0.1 -0.1)\">\r\n       <defs>\r\n        <path d=\"M 40.578125 39.3125 \r\nQ 47.65625 37.796875 51.625 33 \r\nQ 55.609375 28.21875 55.609375 21.1875 \r\nQ 55.609375 10.40625 48.1875 4.484375 \r\nQ 40.765625 -1.421875 27.09375 -1.421875 \r\nQ 22.515625 -1.421875 17.65625 -0.515625 \r\nQ 12.796875 0.390625 7.625 2.203125 \r\nL 7.625 11.71875 \r\nQ 11.71875 9.328125 16.59375 8.109375 \r\nQ 21.484375 6.890625 26.8125 6.890625 \r\nQ 36.078125 6.890625 40.9375 10.546875 \r\nQ 45.796875 14.203125 45.796875 21.1875 \r\nQ 45.796875 27.640625 41.28125 31.265625 \r\nQ 36.765625 34.90625 28.71875 34.90625 \r\nL 20.21875 34.90625 \r\nL 20.21875 43.015625 \r\nL 29.109375 43.015625 \r\nQ 36.375 43.015625 40.234375 45.921875 \r\nQ 44.09375 48.828125 44.09375 54.296875 \r\nQ 44.09375 59.90625 40.109375 62.90625 \r\nQ 36.140625 65.921875 28.71875 65.921875 \r\nQ 24.65625 65.921875 20.015625 65.03125 \r\nQ 15.375 64.15625 9.8125 62.3125 \r\nL 9.8125 71.09375 \r\nQ 15.4375 72.65625 20.34375 73.4375 \r\nQ 25.25 74.21875 29.59375 74.21875 \r\nQ 40.828125 74.21875 47.359375 69.109375 \r\nQ 53.90625 64.015625 53.90625 55.328125 \r\nQ 53.90625 49.265625 50.4375 45.09375 \r\nQ 46.96875 40.921875 40.578125 39.3125 \r\nz\r\n\" id=\"DejaVuSans-51\"/>\r\n       </defs>\r\n       <use xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n       <use x=\"417.822266\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"453.90625\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"517.529297\" xlink:href=\"#DejaVuSans-51\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"xtick_5\">\r\n     <g id=\"line2d_5\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"279.112013\" xlink:href=\"#m13f1fe4dff\" y=\"294.118125\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_5\">\r\n      <!-- 2021-05-14 -->\r\n      <g transform=\"translate(260.516209 347.584984)rotate(-45)scale(0.1 -0.1)\">\r\n       <defs>\r\n        <path d=\"M 37.796875 64.3125 \r\nL 12.890625 25.390625 \r\nL 37.796875 25.390625 \r\nz\r\nM 35.203125 72.90625 \r\nL 47.609375 72.90625 \r\nL 47.609375 25.390625 \r\nL 58.015625 25.390625 \r\nL 58.015625 17.1875 \r\nL 47.609375 17.1875 \r\nL 47.609375 0 \r\nL 37.796875 0 \r\nL 37.796875 17.1875 \r\nL 4.890625 17.1875 \r\nL 4.890625 26.703125 \r\nz\r\n\" id=\"DejaVuSans-52\"/>\r\n       </defs>\r\n       <use xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n       <use x=\"417.822266\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"453.90625\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"517.529297\" xlink:href=\"#DejaVuSans-52\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"xtick_6\">\r\n     <g id=\"line2d_6\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"337.086039\" xlink:href=\"#m13f1fe4dff\" y=\"294.118125\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_6\">\r\n      <!-- 2021-05-15 -->\r\n      <g transform=\"translate(318.490235 347.584984)rotate(-45)scale(0.1 -0.1)\">\r\n       <use xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n       <use x=\"417.822266\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"453.90625\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"517.529297\" xlink:href=\"#DejaVuSans-53\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"xtick_7\">\r\n     <g id=\"line2d_7\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"395.060065\" xlink:href=\"#m13f1fe4dff\" y=\"294.118125\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_7\">\r\n      <!-- 2021-05-16 -->\r\n      <g transform=\"translate(376.464261 347.584984)rotate(-45)scale(0.1 -0.1)\">\r\n       <defs>\r\n        <path d=\"M 33.015625 40.375 \r\nQ 26.375 40.375 22.484375 35.828125 \r\nQ 18.609375 31.296875 18.609375 23.390625 \r\nQ 18.609375 15.53125 22.484375 10.953125 \r\nQ 26.375 6.390625 33.015625 6.390625 \r\nQ 39.65625 6.390625 43.53125 10.953125 \r\nQ 47.40625 15.53125 47.40625 23.390625 \r\nQ 47.40625 31.296875 43.53125 35.828125 \r\nQ 39.65625 40.375 33.015625 40.375 \r\nz\r\nM 52.59375 71.296875 \r\nL 52.59375 62.3125 \r\nQ 48.875 64.0625 45.09375 64.984375 \r\nQ 41.3125 65.921875 37.59375 65.921875 \r\nQ 27.828125 65.921875 22.671875 59.328125 \r\nQ 17.53125 52.734375 16.796875 39.40625 \r\nQ 19.671875 43.65625 24.015625 45.921875 \r\nQ 28.375 48.1875 33.59375 48.1875 \r\nQ 44.578125 48.1875 50.953125 41.515625 \r\nQ 57.328125 34.859375 57.328125 23.390625 \r\nQ 57.328125 12.15625 50.6875 5.359375 \r\nQ 44.046875 -1.421875 33.015625 -1.421875 \r\nQ 20.359375 -1.421875 13.671875 8.265625 \r\nQ 6.984375 17.96875 6.984375 36.375 \r\nQ 6.984375 53.65625 15.1875 63.9375 \r\nQ 23.390625 74.21875 37.203125 74.21875 \r\nQ 40.921875 74.21875 44.703125 73.484375 \r\nQ 48.484375 72.75 52.59375 71.296875 \r\nz\r\n\" id=\"DejaVuSans-54\"/>\r\n       </defs>\r\n       <use xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n       <use x=\"417.822266\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"453.90625\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"517.529297\" xlink:href=\"#DejaVuSans-54\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"xtick_8\">\r\n     <g id=\"line2d_8\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"453.034091\" xlink:href=\"#m13f1fe4dff\" y=\"294.118125\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_8\">\r\n      <!-- 2021-05-17 -->\r\n      <g transform=\"translate(434.438287 347.584984)rotate(-45)scale(0.1 -0.1)\">\r\n       <defs>\r\n        <path d=\"M 8.203125 72.90625 \r\nL 55.078125 72.90625 \r\nL 55.078125 68.703125 \r\nL 28.609375 0 \r\nL 18.3125 0 \r\nL 43.21875 64.59375 \r\nL 8.203125 64.59375 \r\nz\r\n\" id=\"DejaVuSans-55\"/>\r\n       </defs>\r\n       <use xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n       <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n       <use x=\"417.822266\" xlink:href=\"#DejaVuSans-45\"/>\r\n       <use x=\"453.90625\" xlink:href=\"#DejaVuSans-49\"/>\r\n       <use x=\"517.529297\" xlink:href=\"#DejaVuSans-55\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"text_9\">\r\n     <!-- Date -->\r\n     <g transform=\"translate(238.174219 360.653983)scale(0.1 -0.1)\">\r\n      <defs>\r\n       <path d=\"M 19.671875 64.796875 \r\nL 19.671875 8.109375 \r\nL 31.59375 8.109375 \r\nQ 46.6875 8.109375 53.6875 14.9375 \r\nQ 60.6875 21.78125 60.6875 36.53125 \r\nQ 60.6875 51.171875 53.6875 57.984375 \r\nQ 46.6875 64.796875 31.59375 64.796875 \r\nz\r\nM 9.8125 72.90625 \r\nL 30.078125 72.90625 \r\nQ 51.265625 72.90625 61.171875 64.09375 \r\nQ 71.09375 55.28125 71.09375 36.53125 \r\nQ 71.09375 17.671875 61.125 8.828125 \r\nQ 51.171875 0 30.078125 0 \r\nL 9.8125 0 \r\nz\r\n\" id=\"DejaVuSans-68\"/>\r\n       <path d=\"M 34.28125 27.484375 \r\nQ 23.390625 27.484375 19.1875 25 \r\nQ 14.984375 22.515625 14.984375 16.5 \r\nQ 14.984375 11.71875 18.140625 8.90625 \r\nQ 21.296875 6.109375 26.703125 6.109375 \r\nQ 34.1875 6.109375 38.703125 11.40625 \r\nQ 43.21875 16.703125 43.21875 25.484375 \r\nL 43.21875 27.484375 \r\nz\r\nM 52.203125 31.203125 \r\nL 52.203125 0 \r\nL 43.21875 0 \r\nL 43.21875 8.296875 \r\nQ 40.140625 3.328125 35.546875 0.953125 \r\nQ 30.953125 -1.421875 24.3125 -1.421875 \r\nQ 15.921875 -1.421875 10.953125 3.296875 \r\nQ 6 8.015625 6 15.921875 \r\nQ 6 25.140625 12.171875 29.828125 \r\nQ 18.359375 34.515625 30.609375 34.515625 \r\nL 43.21875 34.515625 \r\nL 43.21875 35.40625 \r\nQ 43.21875 41.609375 39.140625 45 \r\nQ 35.0625 48.390625 27.6875 48.390625 \r\nQ 23 48.390625 18.546875 47.265625 \r\nQ 14.109375 46.140625 10.015625 43.890625 \r\nL 10.015625 52.203125 \r\nQ 14.9375 54.109375 19.578125 55.046875 \r\nQ 24.21875 56 28.609375 56 \r\nQ 40.484375 56 46.34375 49.84375 \r\nQ 52.203125 43.703125 52.203125 31.203125 \r\nz\r\n\" id=\"DejaVuSans-97\"/>\r\n       <path d=\"M 18.3125 70.21875 \r\nL 18.3125 54.6875 \r\nL 36.8125 54.6875 \r\nL 36.8125 47.703125 \r\nL 18.3125 47.703125 \r\nL 18.3125 18.015625 \r\nQ 18.3125 11.328125 20.140625 9.421875 \r\nQ 21.96875 7.515625 27.59375 7.515625 \r\nL 36.8125 7.515625 \r\nL 36.8125 0 \r\nL 27.59375 0 \r\nQ 17.1875 0 13.234375 3.875 \r\nQ 9.28125 7.765625 9.28125 18.015625 \r\nL 9.28125 47.703125 \r\nL 2.6875 47.703125 \r\nL 2.6875 54.6875 \r\nL 9.28125 54.6875 \r\nL 9.28125 70.21875 \r\nz\r\n\" id=\"DejaVuSans-116\"/>\r\n       <path d=\"M 56.203125 29.59375 \r\nL 56.203125 25.203125 \r\nL 14.890625 25.203125 \r\nQ 15.484375 15.921875 20.484375 11.0625 \r\nQ 25.484375 6.203125 34.421875 6.203125 \r\nQ 39.59375 6.203125 44.453125 7.46875 \r\nQ 49.3125 8.734375 54.109375 11.28125 \r\nL 54.109375 2.78125 \r\nQ 49.265625 0.734375 44.1875 -0.34375 \r\nQ 39.109375 -1.421875 33.890625 -1.421875 \r\nQ 20.796875 -1.421875 13.15625 6.1875 \r\nQ 5.515625 13.8125 5.515625 26.8125 \r\nQ 5.515625 40.234375 12.765625 48.109375 \r\nQ 20.015625 56 32.328125 56 \r\nQ 43.359375 56 49.78125 48.890625 \r\nQ 56.203125 41.796875 56.203125 29.59375 \r\nz\r\nM 47.21875 32.234375 \r\nQ 47.125 39.59375 43.09375 43.984375 \r\nQ 39.0625 48.390625 32.421875 48.390625 \r\nQ 24.90625 48.390625 20.390625 44.140625 \r\nQ 15.875 39.890625 15.1875 32.171875 \r\nz\r\n\" id=\"DejaVuSans-101\"/>\r\n      </defs>\r\n      <use xlink:href=\"#DejaVuSans-68\"/>\r\n      <use x=\"77.001953\" xlink:href=\"#DejaVuSans-97\"/>\r\n      <use x=\"138.28125\" xlink:href=\"#DejaVuSans-116\"/>\r\n      <use x=\"177.490234\" xlink:href=\"#DejaVuSans-101\"/>\r\n     </g>\r\n    </g>\r\n   </g>\r\n   <g id=\"matplotlib.axis_2\">\r\n    <g id=\"ytick_1\">\r\n     <g id=\"line2d_9\">\r\n      <defs>\r\n       <path d=\"M 0 0 \r\nL -3.5 0 \r\n\" id=\"m8a13f1d60e\" style=\"stroke:#000000;stroke-width:0.8;\"/>\r\n      </defs>\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"26.925\" xlink:href=\"#m8a13f1d60e\" y=\"289.030959\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_10\">\r\n      <!-- 20 -->\r\n      <g transform=\"translate(7.2 292.830178)scale(0.1 -0.1)\">\r\n       <use xlink:href=\"#DejaVuSans-50\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"ytick_2\">\r\n     <g id=\"line2d_10\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"26.925\" xlink:href=\"#m8a13f1d60e\" y=\"252.694061\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_11\">\r\n      <!-- 30 -->\r\n      <g transform=\"translate(7.2 256.49328)scale(0.1 -0.1)\">\r\n       <use xlink:href=\"#DejaVuSans-51\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"ytick_3\">\r\n     <g id=\"line2d_11\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"26.925\" xlink:href=\"#m8a13f1d60e\" y=\"216.357162\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_12\">\r\n      <!-- 40 -->\r\n      <g transform=\"translate(7.2 220.156381)scale(0.1 -0.1)\">\r\n       <use xlink:href=\"#DejaVuSans-52\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"ytick_4\">\r\n     <g id=\"line2d_12\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"26.925\" xlink:href=\"#m8a13f1d60e\" y=\"180.020264\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_13\">\r\n      <!-- 50 -->\r\n      <g transform=\"translate(7.2 183.819483)scale(0.1 -0.1)\">\r\n       <use xlink:href=\"#DejaVuSans-53\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"ytick_5\">\r\n     <g id=\"line2d_13\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"26.925\" xlink:href=\"#m8a13f1d60e\" y=\"143.683366\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_14\">\r\n      <!-- 60 -->\r\n      <g transform=\"translate(7.2 147.482584)scale(0.1 -0.1)\">\r\n       <use xlink:href=\"#DejaVuSans-54\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"ytick_6\">\r\n     <g id=\"line2d_14\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"26.925\" xlink:href=\"#m8a13f1d60e\" y=\"107.346467\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_15\">\r\n      <!-- 70 -->\r\n      <g transform=\"translate(7.2 111.145686)scale(0.1 -0.1)\">\r\n       <use xlink:href=\"#DejaVuSans-55\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"ytick_7\">\r\n     <g id=\"line2d_15\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"26.925\" xlink:href=\"#m8a13f1d60e\" y=\"71.009569\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_16\">\r\n      <!-- 80 -->\r\n      <g transform=\"translate(7.2 74.808788)scale(0.1 -0.1)\">\r\n       <defs>\r\n        <path d=\"M 31.78125 34.625 \r\nQ 24.75 34.625 20.71875 30.859375 \r\nQ 16.703125 27.09375 16.703125 20.515625 \r\nQ 16.703125 13.921875 20.71875 10.15625 \r\nQ 24.75 6.390625 31.78125 6.390625 \r\nQ 38.8125 6.390625 42.859375 10.171875 \r\nQ 46.921875 13.96875 46.921875 20.515625 \r\nQ 46.921875 27.09375 42.890625 30.859375 \r\nQ 38.875 34.625 31.78125 34.625 \r\nz\r\nM 21.921875 38.8125 \r\nQ 15.578125 40.375 12.03125 44.71875 \r\nQ 8.5 49.078125 8.5 55.328125 \r\nQ 8.5 64.0625 14.71875 69.140625 \r\nQ 20.953125 74.21875 31.78125 74.21875 \r\nQ 42.671875 74.21875 48.875 69.140625 \r\nQ 55.078125 64.0625 55.078125 55.328125 \r\nQ 55.078125 49.078125 51.53125 44.71875 \r\nQ 48 40.375 41.703125 38.8125 \r\nQ 48.828125 37.15625 52.796875 32.3125 \r\nQ 56.78125 27.484375 56.78125 20.515625 \r\nQ 56.78125 9.90625 50.3125 4.234375 \r\nQ 43.84375 -1.421875 31.78125 -1.421875 \r\nQ 19.734375 -1.421875 13.25 4.234375 \r\nQ 6.78125 9.90625 6.78125 20.515625 \r\nQ 6.78125 27.484375 10.78125 32.3125 \r\nQ 14.796875 37.15625 21.921875 38.8125 \r\nz\r\nM 18.3125 54.390625 \r\nQ 18.3125 48.734375 21.84375 45.5625 \r\nQ 25.390625 42.390625 31.78125 42.390625 \r\nQ 38.140625 42.390625 41.71875 45.5625 \r\nQ 45.3125 48.734375 45.3125 54.390625 \r\nQ 45.3125 60.0625 41.71875 63.234375 \r\nQ 38.140625 66.40625 31.78125 66.40625 \r\nQ 25.390625 66.40625 21.84375 63.234375 \r\nQ 18.3125 60.0625 18.3125 54.390625 \r\nz\r\n\" id=\"DejaVuSans-56\"/>\r\n       </defs>\r\n       <use xlink:href=\"#DejaVuSans-56\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n    <g id=\"ytick_8\">\r\n     <g id=\"line2d_16\">\r\n      <g>\r\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"26.925\" xlink:href=\"#m8a13f1d60e\" y=\"34.67267\"/>\r\n      </g>\r\n     </g>\r\n     <g id=\"text_17\">\r\n      <!-- 90 -->\r\n      <g transform=\"translate(7.2 38.471889)scale(0.1 -0.1)\">\r\n       <defs>\r\n        <path d=\"M 10.984375 1.515625 \r\nL 10.984375 10.5 \r\nQ 14.703125 8.734375 18.5 7.8125 \r\nQ 22.3125 6.890625 25.984375 6.890625 \r\nQ 35.75 6.890625 40.890625 13.453125 \r\nQ 46.046875 20.015625 46.78125 33.40625 \r\nQ 43.953125 29.203125 39.59375 26.953125 \r\nQ 35.25 24.703125 29.984375 24.703125 \r\nQ 19.046875 24.703125 12.671875 31.3125 \r\nQ 6.296875 37.9375 6.296875 49.421875 \r\nQ 6.296875 60.640625 12.9375 67.421875 \r\nQ 19.578125 74.21875 30.609375 74.21875 \r\nQ 43.265625 74.21875 49.921875 64.515625 \r\nQ 56.59375 54.828125 56.59375 36.375 \r\nQ 56.59375 19.140625 48.40625 8.859375 \r\nQ 40.234375 -1.421875 26.421875 -1.421875 \r\nQ 22.703125 -1.421875 18.890625 -0.6875 \r\nQ 15.09375 0.046875 10.984375 1.515625 \r\nz\r\nM 30.609375 32.421875 \r\nQ 37.25 32.421875 41.125 36.953125 \r\nQ 45.015625 41.5 45.015625 49.421875 \r\nQ 45.015625 57.28125 41.125 61.84375 \r\nQ 37.25 66.40625 30.609375 66.40625 \r\nQ 23.96875 66.40625 20.09375 61.84375 \r\nQ 16.21875 57.28125 16.21875 49.421875 \r\nQ 16.21875 41.5 20.09375 36.953125 \r\nQ 23.96875 32.421875 30.609375 32.421875 \r\nz\r\n\" id=\"DejaVuSans-57\"/>\r\n       </defs>\r\n       <use xlink:href=\"#DejaVuSans-57\"/>\r\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n      </g>\r\n     </g>\r\n    </g>\r\n   </g>\r\n   <g id=\"patch_3\">\r\n    <path d=\"M 26.925 294.118125 \r\nL 26.925 22.318125 \r\n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n   </g>\r\n   <g id=\"patch_4\">\r\n    <path d=\"M 473.325 294.118125 \r\nL 473.325 22.318125 \r\n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n   </g>\r\n   <g id=\"patch_5\">\r\n    <path d=\"M 26.925 294.118125 \r\nL 473.325 294.118125 \r\n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n   </g>\r\n   <g id=\"patch_6\">\r\n    <path d=\"M 26.925 22.318125 \r\nL 473.325 22.318125 \r\n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\r\n   </g>\r\n   <g id=\"text_18\">\r\n    <!-- 2021-05-10 to 2021-05-17 -->\r\n    <g transform=\"translate(170.549062 16.318125)scale(0.12 -0.12)\">\r\n     <defs>\r\n      <path id=\"DejaVuSans-32\"/>\r\n      <path d=\"M 30.609375 48.390625 \r\nQ 23.390625 48.390625 19.1875 42.75 \r\nQ 14.984375 37.109375 14.984375 27.296875 \r\nQ 14.984375 17.484375 19.15625 11.84375 \r\nQ 23.34375 6.203125 30.609375 6.203125 \r\nQ 37.796875 6.203125 41.984375 11.859375 \r\nQ 46.1875 17.53125 46.1875 27.296875 \r\nQ 46.1875 37.015625 41.984375 42.703125 \r\nQ 37.796875 48.390625 30.609375 48.390625 \r\nz\r\nM 30.609375 56 \r\nQ 42.328125 56 49.015625 48.375 \r\nQ 55.71875 40.765625 55.71875 27.296875 \r\nQ 55.71875 13.875 49.015625 6.21875 \r\nQ 42.328125 -1.421875 30.609375 -1.421875 \r\nQ 18.84375 -1.421875 12.171875 6.21875 \r\nQ 5.515625 13.875 5.515625 27.296875 \r\nQ 5.515625 40.765625 12.171875 48.375 \r\nQ 18.84375 56 30.609375 56 \r\nz\r\n\" id=\"DejaVuSans-111\"/>\r\n     </defs>\r\n     <use xlink:href=\"#DejaVuSans-50\"/>\r\n     <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\r\n     <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\r\n     <use x=\"190.869141\" xlink:href=\"#DejaVuSans-49\"/>\r\n     <use x=\"254.492188\" xlink:href=\"#DejaVuSans-45\"/>\r\n     <use x=\"290.576172\" xlink:href=\"#DejaVuSans-48\"/>\r\n     <use x=\"354.199219\" xlink:href=\"#DejaVuSans-53\"/>\r\n     <use x=\"417.822266\" xlink:href=\"#DejaVuSans-45\"/>\r\n     <use x=\"453.90625\" xlink:href=\"#DejaVuSans-49\"/>\r\n     <use x=\"517.529297\" xlink:href=\"#DejaVuSans-48\"/>\r\n     <use x=\"581.152344\" xlink:href=\"#DejaVuSans-32\"/>\r\n     <use x=\"612.939453\" xlink:href=\"#DejaVuSans-116\"/>\r\n     <use x=\"652.148438\" xlink:href=\"#DejaVuSans-111\"/>\r\n     <use x=\"713.330078\" xlink:href=\"#DejaVuSans-32\"/>\r\n     <use x=\"745.117188\" xlink:href=\"#DejaVuSans-50\"/>\r\n     <use x=\"808.740234\" xlink:href=\"#DejaVuSans-48\"/>\r\n     <use x=\"872.363281\" xlink:href=\"#DejaVuSans-50\"/>\r\n     <use x=\"935.986328\" xlink:href=\"#DejaVuSans-49\"/>\r\n     <use x=\"999.609375\" xlink:href=\"#DejaVuSans-45\"/>\r\n     <use x=\"1035.693359\" xlink:href=\"#DejaVuSans-48\"/>\r\n     <use x=\"1099.316406\" xlink:href=\"#DejaVuSans-53\"/>\r\n     <use x=\"1162.939453\" xlink:href=\"#DejaVuSans-45\"/>\r\n     <use x=\"1199.023438\" xlink:href=\"#DejaVuSans-49\"/>\r\n     <use x=\"1262.646484\" xlink:href=\"#DejaVuSans-55\"/>\r\n    </g>\r\n   </g>\r\n   <g id=\"legend_1\">\r\n    <g id=\"patch_7\">\r\n     <path d=\"M 404.314062 44.99625 \r\nL 466.325 44.99625 \r\nQ 468.325 44.99625 468.325 42.99625 \r\nL 468.325 29.318125 \r\nQ 468.325 27.318125 466.325 27.318125 \r\nL 404.314062 27.318125 \r\nQ 402.314062 27.318125 402.314062 29.318125 \r\nL 402.314062 42.99625 \r\nQ 402.314062 44.99625 404.314062 44.99625 \r\nz\r\n\" style=\"fill:#ffffff;opacity:0.8;stroke:#cccccc;stroke-linejoin:miter;\"/>\r\n    </g>\r\n    <g id=\"PathCollection_2\">\r\n     <g>\r\n      <use style=\"fill:#1f77b4;stroke:#1f77b4;\" x=\"416.314062\" xlink:href=\"#mce51d0b1a8\" y=\"36.291562\"/>\r\n     </g>\r\n    </g>\r\n    <g id=\"text_19\">\r\n     <!-- %OEE -->\r\n     <g transform=\"translate(434.314062 38.916562)scale(0.1 -0.1)\">\r\n      <defs>\r\n       <path d=\"M 72.703125 32.078125 \r\nQ 68.453125 32.078125 66.03125 28.46875 \r\nQ 63.625 24.859375 63.625 18.40625 \r\nQ 63.625 12.0625 66.03125 8.421875 \r\nQ 68.453125 4.78125 72.703125 4.78125 \r\nQ 76.859375 4.78125 79.265625 8.421875 \r\nQ 81.6875 12.0625 81.6875 18.40625 \r\nQ 81.6875 24.8125 79.265625 28.4375 \r\nQ 76.859375 32.078125 72.703125 32.078125 \r\nz\r\nM 72.703125 38.28125 \r\nQ 80.421875 38.28125 84.953125 32.90625 \r\nQ 89.5 27.546875 89.5 18.40625 \r\nQ 89.5 9.28125 84.9375 3.921875 \r\nQ 80.375 -1.421875 72.703125 -1.421875 \r\nQ 64.890625 -1.421875 60.34375 3.921875 \r\nQ 55.8125 9.28125 55.8125 18.40625 \r\nQ 55.8125 27.59375 60.375 32.9375 \r\nQ 64.9375 38.28125 72.703125 38.28125 \r\nz\r\nM 22.3125 68.015625 \r\nQ 18.109375 68.015625 15.6875 64.375 \r\nQ 13.28125 60.75 13.28125 54.390625 \r\nQ 13.28125 47.953125 15.671875 44.328125 \r\nQ 18.0625 40.71875 22.3125 40.71875 \r\nQ 26.5625 40.71875 28.96875 44.328125 \r\nQ 31.390625 47.953125 31.390625 54.390625 \r\nQ 31.390625 60.6875 28.953125 64.34375 \r\nQ 26.515625 68.015625 22.3125 68.015625 \r\nz\r\nM 66.40625 74.21875 \r\nL 74.21875 74.21875 \r\nL 28.609375 -1.421875 \r\nL 20.796875 -1.421875 \r\nz\r\nM 22.3125 74.21875 \r\nQ 30.03125 74.21875 34.609375 68.875 \r\nQ 39.203125 63.53125 39.203125 54.390625 \r\nQ 39.203125 45.171875 34.640625 39.84375 \r\nQ 30.078125 34.515625 22.3125 34.515625 \r\nQ 14.546875 34.515625 10.03125 39.859375 \r\nQ 5.515625 45.21875 5.515625 54.390625 \r\nQ 5.515625 63.484375 10.046875 68.84375 \r\nQ 14.59375 74.21875 22.3125 74.21875 \r\nz\r\n\" id=\"DejaVuSans-37\"/>\r\n       <path d=\"M 39.40625 66.21875 \r\nQ 28.65625 66.21875 22.328125 58.203125 \r\nQ 16.015625 50.203125 16.015625 36.375 \r\nQ 16.015625 22.609375 22.328125 14.59375 \r\nQ 28.65625 6.59375 39.40625 6.59375 \r\nQ 50.140625 6.59375 56.421875 14.59375 \r\nQ 62.703125 22.609375 62.703125 36.375 \r\nQ 62.703125 50.203125 56.421875 58.203125 \r\nQ 50.140625 66.21875 39.40625 66.21875 \r\nz\r\nM 39.40625 74.21875 \r\nQ 54.734375 74.21875 63.90625 63.9375 \r\nQ 73.09375 53.65625 73.09375 36.375 \r\nQ 73.09375 19.140625 63.90625 8.859375 \r\nQ 54.734375 -1.421875 39.40625 -1.421875 \r\nQ 24.03125 -1.421875 14.8125 8.828125 \r\nQ 5.609375 19.09375 5.609375 36.375 \r\nQ 5.609375 53.65625 14.8125 63.9375 \r\nQ 24.03125 74.21875 39.40625 74.21875 \r\nz\r\n\" id=\"DejaVuSans-79\"/>\r\n       <path d=\"M 9.8125 72.90625 \r\nL 55.90625 72.90625 \r\nL 55.90625 64.59375 \r\nL 19.671875 64.59375 \r\nL 19.671875 43.015625 \r\nL 54.390625 43.015625 \r\nL 54.390625 34.71875 \r\nL 19.671875 34.71875 \r\nL 19.671875 8.296875 \r\nL 56.78125 8.296875 \r\nL 56.78125 0 \r\nL 9.8125 0 \r\nz\r\n\" id=\"DejaVuSans-69\"/>\r\n      </defs>\r\n      <use xlink:href=\"#DejaVuSans-37\"/>\r\n      <use x=\"95.019531\" xlink:href=\"#DejaVuSans-79\"/>\r\n      <use x=\"173.730469\" xlink:href=\"#DejaVuSans-69\"/>\r\n      <use x=\"236.914062\" xlink:href=\"#DejaVuSans-69\"/>\r\n     </g>\r\n    </g>\r\n   </g>\r\n  </g>\r\n </g>\r\n <defs>\r\n  <clipPath id=\"p94d9edf2e4\">\r\n   <rect height=\"271.8\" width=\"446.4\" x=\"26.925\" y=\"22.318125\"/>\r\n  </clipPath>\r\n </defs>\r\n</svg>\r\n",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     }
    }
   ],
   "source": [
    "startUp()\n",
    "pairDateData(dataOEE_Page, dataTS_Page)\n",
    "todaysDate = dt.datetime.today()\n",
    "beginningOfInterval = dt.datetime.today()\n",
    "todaysDate = todaysDate.strftime(\"%Y-%m-%d\")\n",
    "#passedDate = todaysDate\n",
    "passedDate = '2021-05-17'\n",
    "narrowDates(passedDate, 'Tier 3')\n",
    "exportList = []\n",
    "\n",
    "columnList = pairedDate.columns.values.tolist()\n",
    "\n",
    "root = tk.Tk()\n",
    "root.title('Data Analysis for Twin Screw')\n",
    "#width, height = root.winfo_screenwidth(), root.winfo_screenheight()\n",
    "root.state('zoomed')\n",
    "\n",
    "#Sets up the menu bar for tabs to be mounted on\n",
    "selectMenu = tk.Menu(root)\n",
    "root.config(menu = selectMenu)\n",
    "        \n",
    "#Makes dropdown menu for the File tab\n",
    "fileMenu = tk.Menu(selectMenu)\n",
    "fileMenu.add_command(label=\"Help\")\n",
    "fileMenu.add_command(label=\"Save as\", command = saveCharts)#will call a saving function\n",
    "fileMenu.add_command(label=\"Print\")#call both a saving and printing function\n",
    "fileMenu.add_command(label=\"Exit\", command = root.destroy)\n",
    "selectMenu.add_cascade(label=\"File\", menu=fileMenu)\n",
    "\n",
    "x = tk.StringVar(root)\n",
    "y1 = tk.StringVar(root)\n",
    "y2 = tk.StringVar(root)\n",
    "select = tk.StringVar(root)\n",
    "corrCheck = tk.BooleanVar(root)\n",
    "\n",
    "#Where all the labels for dropdown menus and the calender objects will go\n",
    "labelDate = tk.Label(root, text = \"Date\")\n",
    "labelX = tk.Label(root, text = \"X-Variable\")\n",
    "labelY = tk.Label(root, text = \"1. Y-Variable\")\n",
    "labelY2 = tk.Label(root, text = \"2. Y-Variable\")\n",
    "\n",
    "labelDate.grid(row = 0, column = 0, sticky = 'W')\n",
    "labelX.grid(row = 1, column = 0, sticky = 'W')\n",
    "labelY.grid(row = 2, column = 0, sticky = 'W')\n",
    "labelY2.grid(row = 3, column = 0, sticky = 'W')\n",
    "\n",
    "#Makes calender widget, and dropdown menus for variables\n",
    "dateEntry = cal.DateEntry(root)\n",
    "selectX = tk.OptionMenu(root, x, *columnList)\n",
    "selectY1 = tk.OptionMenu(root, y1, *columnList)\n",
    "selectY2 = tk.OptionMenu(root, y2, *columnList)\n",
    "\n",
    "dateEntry.grid(row = 0, column = 1, sticky = 'W', padx = 10)\n",
    "selectX.grid(row = 1, column= 1, sticky='W')\n",
    "selectY1.grid(row=2, column=1, sticky='W')\n",
    "selectY2.grid(row=3, column=1, sticky='W')\n",
    "\n",
    "#Builds frame for image\n",
    "graphFrame = tk.Frame(root)\n",
    "graphFrame.grid(row = 0, column = 2, rowspan = 4, columnspan = 5, padx=20) #Spans column 2 to 6 and row 0 to 3\n",
    "\n",
    "#Generates graph for the frame and is capable of being redrawn\n",
    "#tableData = tableData.sort_values(by='Efficiency') #Sorts values to be more easily understandable by graph view\n",
    "\n",
    "fig = plt.figure(figsize=(8, 5))\n",
    "#lastGraph = plt.figure()\n",
    "ax1 = fig.add_subplot(111)\n",
    "#ax1.plot(tableData.index, tableData['Efficiency'], label = 'Efficiency')\n",
    "#ax1.set_xlabel('Date')\n",
    "#ax1.legend()\n",
    "\n",
    "\n",
    "canvas = FigureCanvasTkAgg(fig, master=graphFrame)  # A tk.DrawingArea.\n",
    "canvas.draw()\n",
    "canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand=1)\n",
    "\n",
    "toolbar = NavigationToolbar2Tk(canvas, graphFrame)\n",
    "toolbar.update()\n",
    "canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand=1)\n",
    "\n",
    "#Checks for correlation between numbers through sorting by x-axis (if needed)\n",
    "correlationCheck = tk.Checkbutton(root, variable = corrCheck, text=\"Find Correlation\")\n",
    "correlationCheck.grid(row = 4, column = 5, sticky = 'E')\n",
    "\n",
    "#Builds in the buttons to make the application function (Will likely lose some functionality in the final form)\n",
    "tierList = ['Tier 2', 'Tier 3', 'Tier 5']\n",
    "exportButton = tk.Button(root, text = \"Export to PDF\", command = exportReady)\n",
    "selectTier = tk.OptionMenu(root, select, *tierList)\n",
    "applyButton = tk.Button(root, text = \"Apply\", command = lambda: applyFunction(dateEntry.get_date().strftime(\"%Y-%m-%d\"), x.get(), y1.get(), y2.get(), select.get(), corrCheck.get()))\n",
    "refreshButton = tk.Button(root, text = \"Refresh\")\n",
    "removeButton = tk.Button(root, text = \"Remove Row\")\n",
    "select.set('Tier 3')\n",
    "\n",
    "applyButton.grid(row = 4, column = 0) #Will recieve commands in final version\n",
    "exportButton.grid(row = 4, column = 1, sticky = 'W')\n",
    "selectTier.grid(row=4, column=2, sticky='W')\n",
    "refreshButton.grid(row = 4, column = 3, sticky = 'E')\n",
    "removeButton.grid(row = 4, column = 4, sticky = 'E')\n",
    "\n",
    "#Draws frame for datatable\n",
    "datatableFrame = tk.Frame(root)\n",
    "datatableFrame.grid(row = 6, column = 0, columnspan=7, sticky='WE')\n",
    "\n",
    "#Draws in Datatable\n",
    "table = ps.Table(datatableFrame, dataframe = tableData, showtoolbar= False)\n",
    "table.showIndex()\n",
    "table.show()\n",
    "\n",
    "#Draws label for export scrollable area\n",
    "exportLabel = tk.Label(root, text='Exporting:')\n",
    "exportLabel.grid(row=0, column=7)\n",
    "\n",
    "#Scrollable frame for export charts\n",
    "exportFrame = tk.Frame(root)\n",
    "exportFrame.grid(row = 0, column = 8, sticky = 'WE')\n",
    "\n",
    "exportScroll = tk.Scrollbar(exportFrame)\n",
    "exportScroll.pack(side=tk.RIGHT)\n",
    "\n",
    "exportText = tk.Text(exportFrame, height=3, width=80)\n",
    "exportText.pack(side=tk.LEFT)\n",
    "#exportText.config(state='readonly')\n",
    "exportText.config(state='disabled')\n",
    "\n",
    "#Activates Application\n",
    "root.mainloop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ]
}